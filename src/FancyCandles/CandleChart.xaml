<UserControl
    x:Class="FancyCandles.CandleChart"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:local="clr-namespace:FancyCandles"
    xmlns:de="clr-namespace:FancyCandles.DataElements"
    xmlns:te="clr-namespace:FancyCandles.TickElements"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    mc:Ignorable="d" 
    d:DesignHeight="450" d:DesignWidth="800"
    x:Name="thisUserControl">
    <UserControl.Resources>
        <local:FirstCandleMaxIndexConverter x:Key="firstCandleMaxIndexConverter"/>
        <local:TopBottomMarginConverter x:Key="topBottomMarginConverter"/>

        <local:CrossPriceMarginConverter x:Key="crossPriceMarginConverter"/>
        <local:CrossPriceValueConverter x:Key="crossPriceValueConverter"/>
        <local:CrossVolumeConverter x:Key="crossVolumeConverter"/>

        <local:IntRange_Start_i_Converter x:Key="intRange_Start_i_Converter"/>
        <local:IntRange_Count_Converter x:Key="intRange_Count_Converter"/>

        <local:BoolToVisibilityConverter x:Key="boolToVisibilityConverter"/>
        <local:NotBoolToVisibilityConverter x:Key="notBoolToVisibilityConverter"/>
        <local:SquareBoolToVisibilityConverter x:Key="squareBoolToVisibilityConverter"/>
        <local:VerticalCrossLineVisibilityConverter x:Key="verticalCrossLineVisibilityConverter"/>
    </UserControl.Resources>

    <Grid x:Name="ContainerGrid" DataContext="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}}" Background="{Binding Path=Background, Mode=OneWay}">
        <Grid.RowDefinitions>
            <RowDefinition Height="4*"/> <!-- price chart -->
            <RowDefinition Height="Auto"/> <!-- price-volume dragger -->
            <RowDefinition Height="*"/> <!-- volume -->
            <RowDefinition Height="Auto"/> <!-- volume-portfolio dragger -->
            <RowDefinition Height="*"/> <!-- portfolio -->
            <RowDefinition Height="{Binding Path=TimeAxisHeight, Mode=OneWay}"/> <!-- axis -->
            <RowDefinition Height="25"/> <!-- horizontal scroller -->
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="{Binding Path=PriceAxisWidth, Mode=OneWay}"/>
        </Grid.ColumnDefinitions>
        <!-- ============================================================================================================================================================== -->
        <!-- Price chart -->
        <Border
            x:Name="PriceChartBorder"
            Grid.Row="0"
            Grid.Column="0"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Background="{Binding Path=ChartAreaBackground, Mode=OneWay}"
            BorderBrush="{Binding Path=AxisTickColor}"
            BorderThickness="1"
            RenderOptions.EdgeMode="Aliased"/>

        <!-- Price chart container -->
        <Grid
            x:Name="priceChartContainer"
            Grid.Row="0"
            Grid.Column="0"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            SizeChanged="OnPanelCandlesContainerSizeChanged"
            MouseWheel="OnMouseWheel"
            MouseMove="OnMouseMoveInsidePriceChartContainer"
            Panel.ZIndex="2">
            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="Transparent" />

            <!-- Candles -->
            <ItemsControl Name="candlesItemsControl" ItemsSource="{Binding VisibleCandles}">
                <ItemsControl.Margin>
                    <MultiBinding Converter="{StaticResource topBottomMarginConverter}">
                        <Binding ElementName="thisUserControl" Path="PriceChartTopMargin" Mode="OneWay" />
                        <Binding ElementName="thisUserControl" Path="PriceChartBottomMargin" Mode="OneWay" />
                    </MultiBinding>
                </ItemsControl.Margin>
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas Width="{Binding ElementName=priceChartContainer, Path=ActualWidth, Mode=OneWay}"  HorizontalAlignment="Right" />
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemContainerStyle>
                    <Style>
                        <Setter Property="Canvas.Bottom" Value="0" />
                    </Style>
                </ItemsControl.ItemContainerStyle>
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <de:WholeContainerCandleElement
                            CandleData="{Binding Path=.,Mode=OneWay}"
                            Height="{Binding ElementName=candlesItemsControl, Path=ActualHeight}"
                            Width="{Binding ElementName=candlesItemsControl, Path=ActualWidth}"
                            ToolTipService.PlacementTarget="{Binding ElementName=priceChartContainer, Path=., Mode=OneWay}"
                            ToolTipService.Placement="Relative"
                            RenderOptions.EdgeMode="Aliased" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <!-- Legend -->
            <TextBlock
                TextAlignment="Center"
                IsHitTestVisible="False"
                VerticalAlignment="{Binding LegendVerticalAlignment, Mode=OneWay}" 
                HorizontalAlignment="{Binding LegendHorizontalAlignment, Mode=OneWay}" 
                Margin="{Binding LegendMargin, Mode=OneWay}"
                FontFamily="{Binding LegendFontFamily, Mode=OneWay}"
                FontSize="{Binding LegendFontSize, Mode=OneWay}" 
                FontStyle="{Binding LegendFontStyle, Mode=OneWay}"
                Text="{Binding LegendText, Mode=OneWay}" 
                FontWeight="{Binding LegendFontWeight, Mode=OneWay}" 
                Foreground="{Binding LegendForeground, Mode=OneWay}" />

            <!-- Horizontal cross line -->
            <Line
                Stroke="{Binding Path=CrossLinesBrush, Mode=OneWay}"
                StrokeThickness="1"
                StrokeDashArray="{Binding Path=DefaultCrossLinesDashArray, Mode=OneWay}"
                IsHitTestVisible="False"
                RenderOptions.EdgeMode="Aliased"
                X1="0" 
                Y1="{Binding Path=CurrentMousePosition.Y, Mode=OneWay}" 
                X2="{Binding ElementName=priceChartContainer, Path=ActualWidth, Mode=OneWay}" 
                Y2="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Y1, Mode=OneWay}">
                <Line.Visibility>
                    <MultiBinding Converter="{StaticResource squareBoolToVisibilityConverter}">
                        <Binding Path="IsCrossLinesVisible" Mode="OneWay" />
                        <Binding ElementName="priceChartContainer" Path="IsMouseOver" Mode="OneWay" />
                    </MultiBinding>
                </Line.Visibility>
            </Line>

            <!-- Vertical cross line -->
            <Line
                Stroke="{Binding Path=CrossLinesBrush, Mode=OneWay}"
                StrokeThickness="1"
                StrokeDashArray="{Binding Path=DefaultCrossLinesDashArray, Mode=OneWay}"
                IsHitTestVisible="False"
                RenderOptions.EdgeMode="Aliased"
                X1="{Binding Path=CurrentMousePosition.X, Mode=OneWay}" 
                Y1="0" 
                X2="{Binding RelativeSource={RelativeSource Mode=Self}, Path=X1, Mode=OneWay}" 
                Y2="{Binding ElementName=priceChartContainer, Path=ActualHeight, Mode=OneWay}">
                <Line.Visibility>
                    <MultiBinding Converter="{StaticResource verticalCrossLineVisibilityConverter}">
                        <Binding Path="IsCrossLinesVisible" Mode="OneWay"/>
                        <Binding ElementName="priceChartContainer" Path="IsMouseOver" Mode="OneWay"/>
                        <Binding ElementName="volumeHistogramContainer" Path="IsMouseOver" Mode="OneWay"/>
                    </MultiBinding>
                </Line.Visibility>
            </Line>

        </Grid>
        
        <!-- ============================================================================================================================================================== -->
        <!-- Dragger -->
        <GridSplitter Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" ShowsPreview="False" Height="3" HorizontalAlignment="Stretch" VerticalAlignment="Center" Visibility="{Binding Path=IsVolumePanelVisible, Converter={StaticResource boolToVisibilityConverter}}" Background="#131622" />
        <!-- ============================================================================================================================================================== -->
        
        <!-- Volume histogram background -->
        <Border
            Grid.Row="2"
            Grid.Column="0"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            Background="{Binding Path=ChartAreaBackground, Mode=OneWay}"
            BorderBrush="{Binding Path=AxisTickColor}"
            BorderThickness="1"
            RenderOptions.EdgeMode="Aliased"
            Visibility="{Binding Path=IsVolumePanelVisible, Converter={StaticResource boolToVisibilityConverter}}" />

        <!-- Volume histogram container -->
        <Grid
            x:Name="volumeHistogramContainer"
            Grid.Row="2"
            Grid.Column="0"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            MouseWheel="OnMouseWheel"
            MouseMove="OnMouseMoveInsideVolumeHistogramContainer"
            Panel.ZIndex="2"
            Visibility="{Binding Path=IsVolumePanelVisible, Converter={StaticResource boolToVisibilityConverter}}">
            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="Transparent"/>

            <ItemsControl Name="volumesHistogramItemsControl" ItemsSource="{Binding VisibleCandles}">
                <ItemsControl.Margin>
                    <MultiBinding Converter="{StaticResource topBottomMarginConverter}">
                        <Binding ElementName="thisUserControl" Path="VolumeHistogramTopMargin" Mode="OneWay"/>
                        <Binding ElementName="thisUserControl" Path="VolumeHistogramBottomMargin" Mode="OneWay"/>
                    </MultiBinding>
                </ItemsControl.Margin>

                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas Width="{Binding ElementName=volumeHistogramContainer, Path=ActualWidth, Mode=OneWay}"  HorizontalAlignment="Right"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>

                <ItemsControl.ItemContainerStyle>
                    <Style>
                        <Setter Property="Canvas.Bottom" Value="0"/>
                    </Style>
                </ItemsControl.ItemContainerStyle>

                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <de:WholeContainerHistogramBarElement
                            CandleData="{Binding Path=.,Mode=OneWay}" 
                            BullishVolumeBarBrush="{Binding ElementName=thisUserControl, Path=BullishVolumeBarBrush, Mode=OneWay}"              
                            BearishVolumeBarBrush="{Binding ElementName=thisUserControl, Path=BearishVolumeBarBrush, Mode=OneWay}"              
                            Height="{Binding ElementName=volumesHistogramItemsControl, Path=ActualHeight}" 
                            Width="{Binding ElementName=volumesHistogramItemsControl, Path=ActualWidth}"
                            VolumeBarWidthToCandleWidthRatio="{Binding ElementName=thisUserControl, Path=VolumeBarWidthToCandleWidthRatio}"
                            ToolTipService.PlacementTarget="{Binding ElementName=volumeHistogramContainer, Path=., Mode=OneWay}"
                            ToolTipService.Placement="Relative"
                            RenderOptions.EdgeMode="Aliased"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <!-- Horizontal cross line -->
            <Line
                Stroke="{Binding Path=CrossLinesBrush, Mode=OneWay}"
                StrokeThickness="1"
                StrokeDashArray="{Binding Path=DefaultCrossLinesDashArray, Mode=OneWay}"
                IsHitTestVisible="False"
                RenderOptions.EdgeMode="Aliased"
                X1="0" 
                Y1="{Binding Path=CurrentMousePosition.Y, Mode=OneWay}" 
                X2="{Binding ElementName=volumeHistogramContainer, Path=ActualWidth, Mode=OneWay}" 
                Y2="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Y1, Mode=OneWay}">
                <Line.Visibility>
                    <MultiBinding Converter="{StaticResource squareBoolToVisibilityConverter}">
                        <Binding Path="IsCrossLinesVisible" Mode="OneWay"/>
                        <Binding ElementName="volumeHistogramContainer" Path="IsMouseOver" Mode="OneWay"/>
                    </MultiBinding>
                </Line.Visibility>
            </Line>

            <!-- Vertical cross line -->
            <Line
                Stroke="{Binding Path=CrossLinesBrush, Mode=OneWay}"
                StrokeThickness="1"
                StrokeDashArray="{Binding Path=DefaultCrossLinesDashArray, Mode=OneWay}"
                IsHitTestVisible="False"
                RenderOptions.EdgeMode="Aliased"
                X1="{Binding Path=CurrentMousePosition.X, Mode=OneWay}" 
                Y1="0" 
                X2="{Binding RelativeSource={RelativeSource Mode=Self}, Path=X1, Mode=OneWay}" 
                Y2="{Binding ElementName=volumeHistogramContainer, Path=ActualHeight, Mode=OneWay}">
                <Line.Visibility>
                    <MultiBinding Converter="{StaticResource verticalCrossLineVisibilityConverter}">
                        <Binding Path="IsCrossLinesVisible" Mode="OneWay"/>
                        <Binding ElementName="priceChartContainer" Path="IsMouseOver" Mode="OneWay"/>
                        <Binding ElementName="volumeHistogramContainer" Path="IsMouseOver" Mode="OneWay"/>
                    </MultiBinding>
                </Line.Visibility>
            </Line>
        </Grid>

        <!-- ============================================================================================================================================================== -->
        <!-- Dragger -->
        <GridSplitter Grid.Row="3" Grid.Column="0" Grid.ColumnSpan="2" ShowsPreview="False" Height="3" HorizontalAlignment="Stretch" VerticalAlignment="Center" Visibility="{Binding Path=IsPortfolioPanelVisible, Converter={StaticResource boolToVisibilityConverter}}" Background="#131622" />
        <!-- ============================================================================================================================================================== -->

        <!-- Portfolio background: -->
        <Border Grid.Row="4" Grid.Column="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                Background="{Binding Path=ChartAreaBackground, Mode=OneWay}"
                BorderBrush="{Binding Path=AxisTickColor}"
                BorderThickness="1"
                RenderOptions.EdgeMode="Aliased"
                Visibility="{Binding Path=IsPortfolioPanelVisible, Converter={StaticResource boolToVisibilityConverter}}" />

        <!-- Portfolio chart container -->
        <Grid
            x:Name="portfolioChartContainer"
            Grid.Row="4"
            Grid.Column="0"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            MouseWheel="OnMouseWheel"
            MouseMove="OnMouseMoveInsidPortfolioChartContainer"
            Panel.ZIndex="2"
            Visibility="{Binding Path=IsPortfolioPanelVisible, Converter={StaticResource boolToVisibilityConverter}}">
            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="Transparent"/>

            <ItemsControl x:Name="portfolioChartItemsControl" ItemsSource="{Binding VisibleCandles}" Margin="0,15,0,30">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <Canvas Width="{Binding ElementName=portfolioChartContainer, Path=ActualWidth, Mode=OneWay}" HorizontalAlignment="Right"/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>

                <ItemsControl.ItemContainerStyle>
                    <Style>
                        <Setter Property="Canvas.Bottom" Value="0"/>
                    </Style>
                </ItemsControl.ItemContainerStyle>

                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <de:WholeContainerPortfolioBarElement
                            CandleData="{Binding Path=.,Mode=OneWay}" 
                            Height="{Binding ElementName=portfolioChartItemsControl, Path=ActualHeight}"
                            Width="{Binding ElementName=portfolioChartItemsControl, Path=ActualWidth}"
                            ToolTipService.PlacementTarget="{Binding ElementName=portfolioChartContainer, Path=., Mode=OneWay}"
                            ToolTipService.Placement="Relative"
                            RenderOptions.EdgeMode="Aliased" />
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>

            <!-- Horizontal cross line -->
            <Line
                Stroke="{Binding Path=CrossLinesBrush, Mode=OneWay}"
                StrokeThickness="1"
                StrokeDashArray="{Binding Path=DefaultCrossLinesDashArray, Mode=OneWay}"
                IsHitTestVisible="False"
                RenderOptions.EdgeMode="Aliased"
                X1="0" 
                Y1="{Binding Path=CurrentMousePosition.Y, Mode=OneWay}" 
                X2="{Binding ElementName=portfolioChartContainer, Path=ActualWidth, Mode=OneWay}" 
                Y2="{Binding RelativeSource={RelativeSource Mode=Self}, Path=Y1, Mode=OneWay}">
                <Line.Visibility>
                    <MultiBinding Converter="{StaticResource squareBoolToVisibilityConverter}">
                        <Binding Path="IsCrossLinesVisible" Mode="OneWay"/>
                        <Binding ElementName="portfolioChartContainer" Path="IsMouseOver" Mode="OneWay"/>
                    </MultiBinding>
                </Line.Visibility>
            </Line>

            <!-- Vertical cross line -->
            <Line
                Stroke="{Binding Path=CrossLinesBrush, Mode=OneWay}"
                StrokeThickness="1"
                StrokeDashArray="{Binding Path=DefaultCrossLinesDashArray, Mode=OneWay}"
                IsHitTestVisible="False"
                RenderOptions.EdgeMode="Aliased"
                X1="{Binding Path=CurrentMousePosition.X, Mode=OneWay}" 
                Y1="0" 
                X2="{Binding RelativeSource={RelativeSource Mode=Self}, Path=X1, Mode=OneWay}" 
                Y2="{Binding ElementName=portfolioChartContainer, Path=ActualHeight, Mode=OneWay}">
                <Line.Visibility>
                    <MultiBinding Converter="{StaticResource verticalCrossLineVisibilityConverter}">
                        <Binding Path="IsCrossLinesVisible" Mode="OneWay"/>
                        <Binding ElementName="priceChartContainer" Path="IsMouseOver" Mode="OneWay"/>
                        <Binding ElementName="portfolioChartContainer" Path="IsMouseOver" Mode="OneWay"/>
                    </MultiBinding>
                </Line.Visibility>
            </Line>
        </Grid>
        
        <!-- ============================================================================================================================================================== -->
        <!-- Vertical price ticks -->
        <te:PriceTicksElement
            x:Name="verticalPriceTicksElement"
            Grid.Row="0"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            VerticalAlignment="Stretch"
            GapBetweenTickLabels="{Binding Path=GapBetweenPriceTickLabels, Mode=OneWay}"
            ChartBottomMargin="{Binding Path=PriceChartBottomMargin, Mode=OneWay}"
            ChartTopMargin="{Binding Path=PriceChartTopMargin, Mode=OneWay}"
            PriceAxisWidth="{Binding Path=PriceAxisWidth, Mode=OneWay}"
            CandlesLH="{Binding Path=CandlesLH, Mode=OneWay}"
            IsGridlinesEnabled="{Binding Path=IsHorizontalGridlinesEnabled, Mode=OneWay}"
            GridlinesPen="{Binding Path=HorizontalGridlinesPen, Mode=OneWay}"
            RenderOptions.EdgeMode="Aliased" />

        <!-- ============================================================================================================================================================== -->
        <!-- Vertical volume ticks -->
        <te:VolumeTicksElement
            Grid.Row="2"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            VerticalAlignment="Stretch"
            GapBetweenTickLabels="{Binding Path=GapBetweenPriceTickLabels, Mode=OneWay}"
            ChartBottomMargin="{Binding Path=VolumeHistogramBottomMargin, Mode=OneWay}"
            ChartTopMargin="{Binding Path=VolumeHistogramTopMargin, Mode=OneWay}"
            PriceAxisWidth="{Binding Path=PriceAxisWidth, Mode=OneWay}"
            CandlesMaxVolume="{Binding Path=CandlesMaxVolume, Mode=OneWay}"
            IsGridlinesEnabled="{Binding Path=IsHorizontalGridlinesEnabled, Mode=OneWay}"
            GridlinesPen="{Binding Path=HorizontalGridlinesPen, Mode=OneWay}"
            RenderOptions.EdgeMode="Aliased"
            Visibility="{Binding Path=IsVolumePanelVisible, Converter={StaticResource boolToVisibilityConverter}}" />

        <!-- ============================================================================================================================================================== -->
        <!-- Vertical portfolio ticks -->
        <te:PriceTicksElement
            Grid.Row="4"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            VerticalAlignment="Stretch"
            GapBetweenTickLabels="{Binding Path=GapBetweenPriceTickLabels, Mode=OneWay}"
            ChartBottomMargin="{Binding Path=PriceChartBottomMargin, Mode=OneWay}"
            ChartTopMargin="{Binding Path=PriceChartTopMargin, Mode=OneWay}"
            PriceAxisWidth="{Binding Path=PriceAxisWidth, Mode=OneWay}"
            CandlesLH="{Binding Path=PortfolioCandlesLH, Mode=OneWay}"
            IsGridlinesEnabled="{Binding Path=IsHorizontalGridlinesEnabled, Mode=OneWay}"
            GridlinesPen="{Binding Path=HorizontalGridlinesPen, Mode=OneWay}"
            RenderOptions.EdgeMode="Aliased" />
        
        <!-- ============================================================================================================================================================== -->
        <!-- Horizontal time ticks -->
        <te:TimeTicksElement
            Grid.Row="0"
            Grid.Column="0"
            Grid.RowSpan="6"
            Grid.ColumnSpan="2"
            HorizontalAlignment="Stretch"
            TimeAxisHeight="{Binding Path=TimeAxisHeight, Mode=OneWay}"
            CandlesSource="{Binding Path=CandlesSource, Mode=OneWay}"
            CandleWidth="{Binding Path=CandleWidth, Mode=OneWay}"
            GapBetweenCandles="{Binding Path=GapBetweenCandles, Mode=OneWay}"
            TimeFrame="{Binding Path=TimeFrame, Mode=OneWay}"
            VisibleCandlesRange="{Binding Path=VisibleCandlesRange, Mode=OneWay}"
            IsGridlinesEnabled="{Binding Path=IsVerticalGridlinesEnabled, Mode=OneWay}"
            GridlinesPen="{Binding Path=VerticalGridlinesPen, Mode=OneWay}"
            HideMinorGridlines="{Binding Path=HideMinorVerticalGridlines, Mode=OneWay}"
            RenderOptions.EdgeMode="Aliased" />

        <!-- needed for mouse to work -->
        <Grid Grid.Row="5" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="Transparent" MouseWheel="OnMouseWheel" />
        <!-- ============================================================================================================================================================== -->
        <!-- Price chart crosshair border -->
        <Border
            x:Name="priceChartCrosshairBorder"
            Grid.Row="0"
            Grid.Column="1"
            BorderThickness="1"
            VerticalAlignment="Top"
            HorizontalAlignment="Left"
            Background="{Binding CrossPriceBackground, Mode=OneWay}"
            BorderBrush="{Binding CrossPriceForeground, Mode=OneWay}">
            <Border.Visibility>
                <MultiBinding Converter="{StaticResource squareBoolToVisibilityConverter}">
                    <Binding Path="IsCrossPriceVisible" Mode="OneWay" />
                    <Binding ElementName="priceChartContainer" Path="IsMouseOver" Mode="OneWay" />
                </MultiBinding>
            </Border.Visibility>
            <Border.Margin>
                <MultiBinding Converter="{StaticResource crossPriceMarginConverter}">
                    <Binding Path="CurrentMousePosition" Mode="OneWay" />
                    <Binding Path="PriceTickTextHeight" Mode="OneWay" />
                </MultiBinding>
            </Border.Margin>
            <TextBlock Foreground="{Binding CrossPriceForeground, Mode=OneWay}">
                <TextBlock.Text>
                    <MultiBinding Converter="{StaticResource crossPriceValueConverter}">
                        <Binding Path="CurrentMousePosition" Mode="OneWay" />
                        <Binding ElementName="priceChartContainer" Path="ActualHeight" Mode="OneWay" />
                        <Binding Path="CandlesLH" Mode="OneWay" />
                        <Binding Path="PriceChartTopMargin" Mode="OneWay" />
                        <Binding Path="PriceChartBottomMargin" Mode="OneWay" />
                        <Binding Path="MaxNumberOfDigitsAfterPointInPrice" Mode="OneWay" />
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
        </Border>

        <!-- Price chart crosshair body -->
        <Border
            Grid.Row="2"
            Grid.Column="1"
            BorderThickness="1"
            VerticalAlignment="Top"
            HorizontalAlignment="Left"
            Background="{Binding CrossPriceBackground, Mode=OneWay}"
            BorderBrush="{Binding CrossPriceForeground, Mode=OneWay}">
            <Border.Visibility>
                <MultiBinding Converter="{StaticResource squareBoolToVisibilityConverter}">
                    <Binding Path="IsCrossPriceVisible" Mode="OneWay"  />
                    <Binding ElementName="volumeHistogramContainer" Path="IsMouseOver" Mode="OneWay" />
                </MultiBinding>
            </Border.Visibility>
            <Border.Margin>
                <MultiBinding Converter="{StaticResource crossPriceMarginConverter}">
                    <Binding Path="CurrentMousePosition" Mode="OneWay" />
                    <Binding Path="PriceTickTextHeight" Mode="OneWay" />
                </MultiBinding>
            </Border.Margin>
            <TextBlock Foreground="{Binding CrossPriceForeground, Mode=OneWay}">
                <TextBlock.Text>
                    <MultiBinding Converter="{StaticResource crossVolumeConverter}">
                        <Binding Path="CurrentMousePosition" Mode="OneWay" />
                        <Binding ElementName="volumeHistogramContainer" Path="ActualHeight" Mode="OneWay" />
                        <Binding Path="CandlesMaxVolume" Mode="OneWay" />
                        <Binding Path="VolumeHistogramTopMargin" Mode="OneWay" />
                        <Binding Path="VolumeHistogramBottomMargin" Mode="OneWay" />
                    </MultiBinding>
                </TextBlock.Text>
            </TextBlock>
        </Border>
        
        <!-- ============================================================================================================================================================== -->
        <!-- Horizontal scroller -->
        <ScrollBar
            Grid.Row="6"
            Grid.Column="0"
            Orientation="Horizontal"
            Margin="0,0,0,0"
            Minimum="0"
            SmallChange="1" 
            Background="{Binding ElementName=thisUserControl, Path=ScrollBarBackground}"
            Height="{Binding ElementName=thisUserControl, Path=ScrollBarHeight}"
            Value="{Binding Path=VisibleCandlesRange, Converter={StaticResource intRange_Start_i_Converter}, Mode=TwoWay}"
            ViewportSize="{Binding Path=VisibleCandlesRange, Converter={StaticResource intRange_Count_Converter}, Mode=OneWay}">
            <ScrollBar.Maximum>
                <MultiBinding Converter="{StaticResource firstCandleMaxIndexConverter}">
                    <Binding Path="CandlesSource" />
                    <Binding Path="VisibleCandlesRange" Mode="OneWay" />
                </MultiBinding>
            </ScrollBar.Maximum>
        </ScrollBar>
        
        <!-- ============================================================================================================================================================== -->
        <!-- Dim when IsEnabled=False -->
        <Rectangle Grid.Row="0" Grid.RowSpan="5" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Fill="{Binding Path=DisabledFill}" Panel.ZIndex="3" Visibility="{Binding Path=IsEnabled, Converter={StaticResource notBoolToVisibilityConverter}}" />
        <!-- ============================================================================================================================================================== -->
    </Grid>
</UserControl>
